{"version":3,"sources":["components/Form.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["PropTypes","string","isRequired","array","Form","useState","fName","setFName","lName","setLName","stateData","setData","className","onSubmit","e","preventDefault","concat","firstName","lastName","console","log","class","type","id","name","onChange","target","value","required","style","fontSize","length","map","storedData","Header","title","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAiFSA,IAAUC,OAAOC,WAClBF,IAAUC,OAAOC,WACjBF,IAAUC,OACLD,IAAUG,MAGRC,MAnFF,WACX,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA6BJ,mBAAS,IAAtC,mBAAOK,EAAP,KAAkBC,EAAlB,KAqBA,OACE,8BACE,uBAAMC,UAAU,iBAAiBC,SArBhB,SAACC,GACpBA,EAAEC,iBAKFJ,EAAQD,EAAUM,OAAO,CAAEC,UAAWX,EAAOY,SAAUV,KACvDW,QAAQC,IAAIV,GAEZH,EAAS,IACTE,EAAS,KAWP,UACE,sBAAKG,UAAU,uBAAf,UACE,uBAAOS,MAAM,mBAAb,wBACA,uBACEC,KAAK,OACLV,UAAU,aACVW,GAAG,YACHC,KAAK,YACLC,SAAU,SAACX,GAAD,OAAOP,EAASO,EAAEY,OAAOC,QACnCC,UAAQ,OAGZ,sBAAKhB,UAAU,uBAAf,UACE,uBAAOS,MAAM,mBAAb,uBACA,uBACEC,KAAK,OACLV,UAAU,aACVW,GAAG,WACHC,KAAK,WACLC,SAAU,SAACX,GAAD,OAAOL,EAASK,EAAEY,OAAOC,QACnCC,UAAQ,OAGZ,wBAAQN,KAAK,SAASC,GAAG,iBAAzB,SACE,sBAAMM,MAAO,CAAEC,SAAU,IAAzB,sBAEF,qBAAKlB,UAAU,oBAAf,SACE,oBAAIA,UAAU,YAAd,SACGF,EAAUqB,OAAS,EAClBrB,EAAUsB,KAAI,SAACC,GACb,OACE,qBAA+BrB,UAAU,WAAzC,UACGqB,EAAWhB,UADd,IAC0BgB,EAAWf,WAD5Be,EAAWhB,cAKD,IAArBP,EAAUqB,OACZ,qBAAInB,UAAU,WAAd,UACGF,EAAU,GAAGO,UADhB,IAC4BP,EAAU,GAAGQ,YAElB,IAArBR,EAAUqB,OACZ,oBAAInB,UAAU,WAAd,8BACE,eCtEVsB,EAAS,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAChB,OACE,yBAAQZ,GAAG,SAAX,UACE,qBAAKX,UAAU,kBAAf,SACE,oBAAIA,UAAU,aAAd,SAA4BuB,MAE9B,cAAC,EAAD,QAKND,EAAOE,aAAe,CACpBD,MAAO,0BAGMD,QCIAG,EAVH,WAGV,OACE,8BACE,cAAC,EAAD,OCJSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,cAM1Bb,M","file":"static/js/main.2f95acb5.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport Input from \"./Input\";\r\nimport { useState } from \"react\";\r\n\r\nconst Form = () => {\r\n  const [fName, setFName] = useState(\"\");\r\n  const [lName, setLName] = useState(\"\");\r\n  const [stateData, setData] = useState([]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    //how to push the data as an object into storedData?!\r\n    /* const counter = stateData.length; */\r\n\r\n    setData(stateData.concat({ firstName: fName, lastName: lName }));\r\n    console.log(stateData);\r\n\r\n    setFName(\"\");\r\n    setLName(\"\");\r\n  };\r\n\r\n  /*   const mapData = stateData.map((storedData, index) => {\r\n    <li key={storedData[index].firstName} className=\"dataList\">\r\n      {storedData[index].firstName} {storedData[index].lastName}\r\n    </li>;\r\n  }); */\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"form-container\" onSubmit={handleSubmit}>\r\n        <div className=\"my-look-up-container\">\r\n          <label class=\"my-look-up-label\">First Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"my-look-up\"\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            onChange={(e) => setFName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"my-look-up-container\">\r\n          <label class=\"my-look-up-label\">Last Name</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"my-look-up\"\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            onChange={(e) => setLName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" id=\"my-look-up-btn\">\r\n          <span style={{ fontSize: 20 }}>Create</span>\r\n        </button>\r\n        <div className=\"display-container\">\r\n          <ul className=\"dataUlist\">\r\n            {stateData.length > 1 ? (\r\n              stateData.map((storedData) => {\r\n                return (\r\n                  <li key={storedData.firstName} className=\"dataList\">\r\n                    {storedData.firstName} {storedData.lastName}\r\n                  </li>\r\n                );\r\n              })\r\n            ) : stateData.length === 1 ? (\r\n              <li className=\"dataList\">\r\n                {stateData[0].firstName} {stateData[0].lastName}\r\n              </li>\r\n            ) : stateData.length === 0 ? (\r\n              <li className=\"dataList\">There is no Data</li>\r\n            ) : null}\r\n          </ul>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string,\r\n  stateData: PropTypes.array,\r\n};\r\n\r\nexport default Form;\r\n","import Form from \"./Form\";\r\n\r\nconst Header = ({ title }) => {\r\n  return (\r\n    <header id=\"header\">\r\n      <div className=\"title-container\">\r\n        <h1 className=\"site-title\">{title}</h1>\r\n      </div>\r\n      <Form />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"Welcome to the Look-up\",\r\n};\r\n\r\nexport default Header;\r\n","import Header from \"./components/Header\"\r\n\r\n/* var express = require(\"express\");\r\nvar app = express();\r\n \r\napp.get(\"/\", (req, res) => {\r\n res.send(\"Hello World\");\r\n}); */\r\n\r\n\r\n\r\nconst App = () => {\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('container')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}