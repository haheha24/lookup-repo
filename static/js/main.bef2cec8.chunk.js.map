{"version":3,"sources":["components/Display.js","components/Form.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["Display","stateData","deleteData","length","map","storedData","index","className","firstName","lastName","email","style","color","cursor","verticalAlign","onClick","_id","Form","useReducer","initialInput","newInput","input","setInput","useState","setData","useEffect","a","callData","DataFromServer","userObj","getData","fetch","method","headers","res","json","data","addData","form","body","JSON","stringify","prevState","id","deleteID","filter","objectId","handleInputs","e","target","name","value","onSubmit","preventDefault","action","htmlFor","type","onChange","required","fontSize","Header","title","defaultProps","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bef2cec8.chunk.js","sourcesContent":["import { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Display = ({ stateData, deleteData }) => {\r\n  if (stateData.length > 1) {\r\n    return stateData.map((storedData, index) => {\r\n      return (\r\n        <li key={storedData._id} className=\"dataList\">\r\n          First Name: <u>{storedData.firstName}</u><br /> \r\n          Last Name: <u>{storedData.lastName}</u><br /> \r\n          Email: <u>{storedData.email}</u>{\" \"}\r\n          <FaTimes\r\n            className=\"deleteData\"\r\n            style={{\r\n              color: \"red\",\r\n              cursor: \"pointer\",\r\n              verticalAlign: \"middle\",\r\n            }}\r\n            onClick={() => deleteData(stateData[index]._id)}\r\n          />\r\n        </li>\r\n      );\r\n    });\r\n  } else if (stateData.length === 1) {\r\n    return (\r\n      <li key={stateData[0]._id} className=\"dataList\">\r\n        First Name: <u>{stateData[0].firstName}</u><br /> \r\n        Last Name: <u>{stateData[0].lastName}</u><br /> \r\n        Email: <u>{stateData[0].email}</u>{\" \"}\r\n        <FaTimes\r\n          className=\"deleteData\"\r\n          style={{\r\n            color: \"red\",\r\n            cursor: \"pointer\",\r\n            verticalAlign: \"middle\",\r\n          }}\r\n          onClick={() => deleteData(stateData[0]._id)}\r\n        />\r\n      </li>\r\n    );\r\n  } else {\r\n    return <li className=\"dataList\">There is no Data :(</li>;\r\n  }\r\n};\r\n\r\nexport default Display;\r\n","import { useState, useReducer, useEffect } from \"react\";\r\nimport Display from \"./Display.js\";\r\n\r\nconst Form = () => {\r\n  //Initalise Inputs from the Form as states.\r\n  const [input, setInput] = useReducer(\r\n    (initialInput, newInput) => ({ ...initialInput, ...newInput }),\r\n    {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n    }\r\n  );\r\n\r\n  //Initialise stateData\r\n  const [stateData, setData] = useState([]);\r\n\r\n  // Load and display database into view\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const DataFromServer = await callData();\r\n      setData(DataFromServer.userObj);\r\n    };\r\n    getData();\r\n  }, [stateData]);\r\n\r\n  const callData = async () => {\r\n    const res = await fetch(\"http://localhost:4000/routes/index/users/read\", {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\":\r\n          \"http://localhost:4000/routes/index/users/read\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    return data;\r\n  };\r\n\r\n  //Fetch and add data to server\r\n  const addData = async (form) => {\r\n    const res = await fetch(\"http://localhost:4000/routes/index/users/add\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\":\r\n          \"http://localhost:4000/routes/index/users/add\",\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(form),\r\n    });\r\n    const data = await res.json();\r\n    /* setData((prevState) => {\r\n      [...prevState, data]\r\n    }) */\r\n    //the comment above does not work, however the one below works. Maybe data.userObj made the difference.\r\n    setData((prevState) => [...prevState, data.userObj]);\r\n  };\r\n\r\n  //Submits the data when the create button is clicked.\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    addData(input);\r\n  };\r\n\r\n  //Deletes the data with a button click\r\n  const deleteData = async (id) => {\r\n    const res = await fetch(`http://localhost:4000/routes/index/users/delete/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    const deleteID = await res.json()\r\n    setData(stateData.filter((data) => data._id !== deleteID.objectId));\r\n  };\r\n\r\n  //Sets the handler\r\n  const handleInputs = (e) => {\r\n    const { name, value } = e.target;\r\n    setInput({ [name]: value });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form\r\n        className=\"form-container\"\r\n        onSubmit={handleSubmit}\r\n        action=\"/routes/index/users\"\r\n        method=\"POST\"\r\n      >\r\n        <div className=\"my-look-up-container\">\r\n          <label className=\"my-look-up-label\" htmlFor=\"firstName\">\r\n            First Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"my-look-up\"\r\n            id=\"firstName\"\r\n            name=\"firstName\"\r\n            onChange={(e) => handleInputs(e)}\r\n            value={input.firstName}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"my-look-up-container\">\r\n          <label className=\"my-look-up-label\" htmlFor=\"lastName\">\r\n            Last Name\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"my-look-up\"\r\n            id=\"lastName\"\r\n            name=\"lastName\"\r\n            onChange={(e) => handleInputs(e)}\r\n            value={input.lastName}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"my-look-up-container\">\r\n          <label className=\"my-look-up-label\" htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className=\"my-look-up\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            onChange={(e) => handleInputs(e)}\r\n            value={input.email}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" id=\"my-look-up-btn\">\r\n          <span style={{ fontSize: 20 }}>Create</span>\r\n        </button>\r\n        <Display stateData={stateData} deleteData={deleteData} />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import Form from \"./Form.js\";\r\n\r\nconst Header = ({ title }) => {\r\n  return (\r\n    <header id=\"header\">\r\n      <div className=\"title-container\">\r\n        <h1 className=\"site-title\">{title}</h1>\r\n      </div>\r\n      <Form />\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"Welcome to the Look-up\",\r\n};\r\n\r\nexport default Header;\r\n","import Header from \"./components/Header.js\"\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('container')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}